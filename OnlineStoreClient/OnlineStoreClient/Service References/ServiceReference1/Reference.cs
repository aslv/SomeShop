//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnlineStoreClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/OnlineStoreService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/OnlineStoreService")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cover {
            get {
                return this.CoverField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverField, value) != true)) {
                    this.CoverField = value;
                    this.RaisePropertyChanged("Cover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Producer {
            get {
                return this.ProducerField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerField, value) != true)) {
                    this.ProducerField = value;
                    this.RaisePropertyChanged("Producer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        OnlineStoreClient.ServiceReference1.CompositeType GetDataUsingDataContract(OnlineStoreClient.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<OnlineStoreClient.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(OnlineStoreClient.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        bool Login(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductList", ReplyAction="http://tempuri.org/IService1/GetProductListResponse")]
        OnlineStoreClient.ServiceReference1.Product[] GetProductList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductList", ReplyAction="http://tempuri.org/IService1/GetProductListResponse")]
        System.Threading.Tasks.Task<OnlineStoreClient.ServiceReference1.Product[]> GetProductListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSearchedProductsList", ReplyAction="http://tempuri.org/IService1/GetSearchedProductsListResponse")]
        OnlineStoreClient.ServiceReference1.Product[] GetSearchedProductsList(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSearchedProductsList", ReplyAction="http://tempuri.org/IService1/GetSearchedProductsListResponse")]
        System.Threading.Tasks.Task<OnlineStoreClient.ServiceReference1.Product[]> GetSearchedProductsListAsync(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTopTenProductsList", ReplyAction="http://tempuri.org/IService1/GetTopTenProductsListResponse")]
        OnlineStoreClient.ServiceReference1.Product[] GetTopTenProductsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTopTenProductsList", ReplyAction="http://tempuri.org/IService1/GetTopTenProductsListResponse")]
        System.Threading.Tasks.Task<OnlineStoreClient.ServiceReference1.Product[]> GetTopTenProductsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPromoProductsList", ReplyAction="http://tempuri.org/IService1/GetPromoProductsListResponse")]
        OnlineStoreClient.ServiceReference1.Product[] GetPromoProductsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPromoProductsList", ReplyAction="http://tempuri.org/IService1/GetPromoProductsListResponse")]
        System.Threading.Tasks.Task<OnlineStoreClient.ServiceReference1.Product[]> GetPromoProductsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addProduct", ReplyAction="http://tempuri.org/IService1/addProductResponse")]
        void addProduct(string productID, string name, string genre, string description, string cover, System.DateTime releaseDate, string producer, int score, decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addProduct", ReplyAction="http://tempuri.org/IService1/addProductResponse")]
        System.Threading.Tasks.Task addProductAsync(string productID, string name, string genre, string description, string cover, System.DateTime releaseDate, string producer, int score, decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteProduct", ReplyAction="http://tempuri.org/IService1/deleteProductResponse")]
        void deleteProduct(string productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteProduct", ReplyAction="http://tempuri.org/IService1/deleteProductResponse")]
        System.Threading.Tasks.Task deleteProductAsync(string productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addPromotion", ReplyAction="http://tempuri.org/IService1/addPromotionResponse")]
        void addPromotion(string productID, int discount, System.DateTime beginDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addPromotion", ReplyAction="http://tempuri.org/IService1/addPromotionResponse")]
        System.Threading.Tasks.Task addPromotionAsync(string productID, int discount, System.DateTime beginDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/orderProducts", ReplyAction="http://tempuri.org/IService1/orderProductsResponse")]
        bool orderProducts(string Username, string[] productIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/orderProducts", ReplyAction="http://tempuri.org/IService1/orderProductsResponse")]
        System.Threading.Tasks.Task<bool> orderProductsAsync(string Username, string[] productIDs);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : OnlineStoreClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<OnlineStoreClient.ServiceReference1.IService1>, OnlineStoreClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public OnlineStoreClient.ServiceReference1.CompositeType GetDataUsingDataContract(OnlineStoreClient.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<OnlineStoreClient.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(OnlineStoreClient.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public bool Login(string name, string password) {
            return base.Channel.Login(name, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string name, string password) {
            return base.Channel.LoginAsync(name, password);
        }
        
        public OnlineStoreClient.ServiceReference1.Product[] GetProductList() {
            return base.Channel.GetProductList();
        }
        
        public System.Threading.Tasks.Task<OnlineStoreClient.ServiceReference1.Product[]> GetProductListAsync() {
            return base.Channel.GetProductListAsync();
        }
        
        public OnlineStoreClient.ServiceReference1.Product[] GetSearchedProductsList(string data) {
            return base.Channel.GetSearchedProductsList(data);
        }
        
        public System.Threading.Tasks.Task<OnlineStoreClient.ServiceReference1.Product[]> GetSearchedProductsListAsync(string data) {
            return base.Channel.GetSearchedProductsListAsync(data);
        }
        
        public OnlineStoreClient.ServiceReference1.Product[] GetTopTenProductsList() {
            return base.Channel.GetTopTenProductsList();
        }
        
        public System.Threading.Tasks.Task<OnlineStoreClient.ServiceReference1.Product[]> GetTopTenProductsListAsync() {
            return base.Channel.GetTopTenProductsListAsync();
        }
        
        public OnlineStoreClient.ServiceReference1.Product[] GetPromoProductsList() {
            return base.Channel.GetPromoProductsList();
        }
        
        public System.Threading.Tasks.Task<OnlineStoreClient.ServiceReference1.Product[]> GetPromoProductsListAsync() {
            return base.Channel.GetPromoProductsListAsync();
        }
        
        public void addProduct(string productID, string name, string genre, string description, string cover, System.DateTime releaseDate, string producer, int score, decimal price) {
            base.Channel.addProduct(productID, name, genre, description, cover, releaseDate, producer, score, price);
        }
        
        public System.Threading.Tasks.Task addProductAsync(string productID, string name, string genre, string description, string cover, System.DateTime releaseDate, string producer, int score, decimal price) {
            return base.Channel.addProductAsync(productID, name, genre, description, cover, releaseDate, producer, score, price);
        }
        
        public void deleteProduct(string productID) {
            base.Channel.deleteProduct(productID);
        }
        
        public System.Threading.Tasks.Task deleteProductAsync(string productID) {
            return base.Channel.deleteProductAsync(productID);
        }
        
        public void addPromotion(string productID, int discount, System.DateTime beginDate, System.DateTime endDate) {
            base.Channel.addPromotion(productID, discount, beginDate, endDate);
        }
        
        public System.Threading.Tasks.Task addPromotionAsync(string productID, int discount, System.DateTime beginDate, System.DateTime endDate) {
            return base.Channel.addPromotionAsync(productID, discount, beginDate, endDate);
        }
        
        public bool orderProducts(string Username, string[] productIDs) {
            return base.Channel.orderProducts(Username, productIDs);
        }
        
        public System.Threading.Tasks.Task<bool> orderProductsAsync(string Username, string[] productIDs) {
            return base.Channel.orderProductsAsync(Username, productIDs);
        }
    }
}
